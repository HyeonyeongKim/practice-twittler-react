{"ast":null,"code":"var _jsxFileName = \"/Users/hyeonyeongkim/Desktop/CODESTATES/PRACTICE/practice-twittler-react/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SingleTweet(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tweet\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", props.writer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", props.date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", props.content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SingleTweet;\n\nclass Twittler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [{\n        uuid: 1,\n        writer: \"김코딩\",\n        date: \"2020-10-10\",\n        content: \"안녕 리액트\"\n      }, {\n        uuid: 2,\n        writer: \"박해커\",\n        date: \"2019-10-03\",\n        content: \"좋네 좋아\"\n      }]\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  date() {\n    let date = new Date();\n    let yy = date.getFullYear();\n    let mm = date.getMonth() + 1;\n\n    if (mm < 10) {\n      mm = '0' + mm;\n    }\n\n    let dd = date.getDate();\n\n    if (dd < 10) {\n      dd = '0' + dd;\n    }\n\n    return `${yy}-${mm}-${dd}`;\n  }\n\n  handleClick() {\n    let newTweet = {\n      uuid: this.state.tweets.length + 1,\n      writer: \"호노리\",\n      date: this.date(),\n      content: document.querySelector('#new-tweet-content').value\n    };\n    this.setState({\n      tweets: this.state.tweets.concat(newTweet)\n    });\n    this.clearForm();\n  }\n\n  clearForm() {\n    document.querySelector('#new-tweet-content').value = '';\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"root\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uC791\\uC131\\uC790 : \\uD638\\uB180\\uD0B4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"new-tweet\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"new-tweet-content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"submit-new-tweet\",\n            onClick: this.handleClick,\n            children: \"\\uC0C8 \\uAE00 \\uC4F0\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"tweets\",\n          children: this.state.tweets.map(element => {\n            return /*#__PURE__*/_jsxDEV(SingleTweet, {\n              writer: element.writer,\n              date: element.date,\n              content: element.content\n            }, element.uuid, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Twittler;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleTweet\");","map":{"version":3,"sources":["/Users/hyeonyeongkim/Desktop/CODESTATES/PRACTICE/practice-twittler-react/src/App.js"],"names":["React","SingleTweet","props","writer","date","content","Twittler","Component","constructor","state","tweets","uuid","handleClick","bind","Date","yy","getFullYear","mm","getMonth","dd","getDate","newTweet","length","document","querySelector","value","setState","concat","clearForm","render","map","element"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction SingleTweet(props){\n    return (\n        <div id = \"tweet\">\n            <div> {props.writer}</div>\n            <div> {props.date}</div>\n            <div> {props.content}</div>\n        </div>\n    )\n}\n\nclass Twittler extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            tweets:[\n            {\n                uuid : 1,\n                writer : \"김코딩\",\n                date : \"2020-10-10\",\n                content : \"안녕 리액트\"\n            },\n            {\n                uuid : 2,\n                writer : \"박해커\",\n                date : \"2019-10-03\",\n                content : \"좋네 좋아\"\n            }\n            ]\n        }\n        this.handleClick = this.handleClick.bind(this);\n    }\n    date() {\n        let date = new Date()\n        let yy = date.getFullYear();\n    \n        let mm = date.getMonth() + 1;\n        if (mm < 10) {\n          mm = '0' + mm;\n        }\n    \n        let dd = date.getDate();\n        if (dd < 10) {\n          dd = '0' + dd;\n        }\n    \n        return `${yy}-${mm}-${dd}`;\n      \n      }\n    handleClick() {\n        let newTweet = {\n            uuid: this.state.tweets.length+1,\n            writer : \"호노리\",\n            date : this.date(),\n            content : document.querySelector('#new-tweet-content').value\n        }\n        this.setState({\n            tweets : this.state.tweets.concat(newTweet)\n        })\n        this.clearForm()\n    }\n    clearForm() {\n        document.querySelector('#new-tweet-content').value = ''\n    }\n    render(){\n        return (\n            <div id = \"root\">\n                <div>\n                    <div>작성자 : 호놀킴</div>\n                    <div id = \"new-tweet\">\n                        <textarea id = \"new-tweet-content\"></textarea>\n                        <button id = \"submit-new-tweet\" onClick = {this.handleClick}>새 글 쓰기</button>\n                    </div>\n                    <ul id = \"tweets\">\n                        {this.state.tweets.map(element => {\n                            return (\n                            <SingleTweet key = {element.uuid} writer = {element.writer} date = {element.date} content = {element.content}></SingleTweet>    \n                            )                       \n                        })}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Twittler;"]},"metadata":{},"sourceType":"module"}